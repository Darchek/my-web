---
import LinkInline from "./LinkInline.astro"

interface Props {
  title: string
  company: string
  description: string
  link?: string
  date: string,
  text: string[]
}

const { title, company, description, link, date, text } = Astro.props
---

<style>

  .arrow {
    transform: rotate(0deg);
    animation-fill-mode: forwards;
  }

  input:checked + label svg {
    animation: rotateDown 0.3s ease forwards;
  }

  input:not(:checked) + label svg {
    animation: rotateUp 0.3s ease forwards;
  }

  @keyframes rotateDown {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(90deg);
    }
  }

  @keyframes rotateUp {
    from {
      transform: rotate(90deg);
    }
    to {
      transform: rotate(0deg);
    }
  }

  input[type="checkbox"] {
    display: none;
  }
  
  .exp-content {
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    padding-top: 0;
    animation-fill-mode: forwards;
  }

  input:checked ~ .exp-content {
    animation: expandContent 0.5s ease forwards;
  }

  input:not(:checked) ~ .exp-content {
    animation: collapseContent 0.5s ease forwards;
  }

  @keyframes expandContent {
    from {
      max-height: 0;
      padding-top: 0;
      opacity: 0;
    }
    to {
      max-height: 800px;
      padding-top: 1.5rem;
      opacity: 1;
    }
  }

  @keyframes collapseContent {
    from {
      max-height: 800px;
      padding-top: 1.5rem;
      opacity: 1;
    }
    to {
      max-height: 0;
      padding-top: 0;
      opacity: 0;
    }
  }

  ul.exp-list {
      list-style-type: none; /* Remove default bullets */
      padding-left: 1em;
    }

    ul.exp-list li {
      position: relative;
      padding-left: 1.5em;
      margin-bottom: 0.5em;
    }

    ul.exp-list li::before {
      content: "â€¢"; /* Custom bullet */
      color: #007BFF; /* Blue bullet */
      font-size: 1.2em;
      position: absolute;
      left: 0;
      top: 0;
    }

</style>


<div
  class="relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-[''] md:grid-cols-5 md:gap-x-10 md:space-x-4]"
>
  <div class="relative pb-3 md:col-span-2">
    <div class="sticky top-0">
      <span class="text-yellow-400 -left-[42px] absolute rounded-full text-5xl"
        >&bull;</span
      >

      <h3 class="text-xl font-bold text-yellow-400">{title}</h3>
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white">
        <a href={link}>{company}</a></h4>
      <time class="p-0 m-0 text-sm text-gray-600/80 dark:text-white/80">{date}</time>
    </div>
  </div>
  <div class="relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3">
    {description}
  </div>
  <div class="relative flex flex-col pb-4 text-gray-600 dark:text-gray-300 md:col-span-5">
    <input type="checkbox" id=`arrow-toggle-${title}` />
    <label for=`arrow-toggle-${title}` class="cursor-pointer inline-flex items-center">
    {
      link && (
        <LinkInline>
          More info
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-5 icon icon-tabler icon-tabler-chevron-right"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M9 6l6 6l-6 6" />
            </>
          </svg>
        </LinkInline>
      )
    }
    </label>
      
    <div class="exp-content">
      <ul class="exp-list">
        {text && text.map((item) => (
          <li>{item}</li>
        ))}
      </ul>
    </div>
</div>

</div>
